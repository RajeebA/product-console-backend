const mongoose = require("mongoose");
const app = require("../app");
const config = require("../config/config");
const logger = require("../config/logger");

let server;
let limit = 0;
const setupConnection = async () => {
  try {
    limit++;
    await mongoose.connect(config.mongoose.url, config.mongoose.options);
    logger.info("Connected to MongoDB");
    server = app.listen(config.port, () => {
      logger.info(`Listening to port ${config.port}`);
    });
  } catch (error) {
    console.log(error);
    if (limit < 5) {
      setupConnection();
    } else {
      throw error;
    }
  }
};
setupConnection();
const exitHandler = () => {
  if (server) {
    server.close(() => {
      logger.info("Server closed");
      process.exit(1);
    });
  } else {
    process.exit(1);
  }
};

const unexpectedErrorHandler = (error) => {
  logger.error(error);
  exitHandler();
};

process.on("uncaughtException", unexpectedErrorHandler);
process.on("unhandledRejection", unexpectedErrorHandler);

process.on("SIGTERM", () => {
  logger.info("SIGTERM received");
  if (server) {
    server.close();
  }
});
